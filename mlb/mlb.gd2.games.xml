<?xml version="1.0" encoding="UTF-8"?>
<table xmlns="http://query.yahooapis.com/v1/schema/table.xsd">
	<meta>
		<author>Zachary Forest Johnson</author>
		<documentationURL>http://indiemaps.com/js-hit-locations-map/</documentationURL>
		<sampleQuery>select * from mlb.gd2.games where year="2009" and month="07" and day="03"</sampleQuery>
	</meta>
	<bindings>
		<select itemPath="result.game" produces="JSON">
			<urls>
				<url>http://gd2.mlb.com/components/game/mlb/</url>
			</urls>

			<inputs>
				<key id="month" type="xs:string" paramType="variable" required="true" />
				<key id="year" type="xs:string" paramType="variable" required="true" />
				<key id="day" type="xs:string" paramType="variable" required="true" />
			</inputs>

			<execute>
				<![CDATA[
				var baseURI = "http://gd2.mlb.com/components/game/mlb/";
        		var datePart = "year_" + year + "/month_" + month + "/day_" + day;
        		var scoreboardPart = "/scoreboard.xml";
        		var scoreboardURLForDate = baseURI + datePart + scoreboardPart;
        		var xml = y.rest( scoreboardURLForDate ).get().response;     		
        		
        		// this will be the response object
        		var gamesObject = { 'game' : new Array() };
        		
        		for each ( var game in xml.go_game ) {        			
        			var gid = game.game.@id.toString();

        			var gameURL = baseURI + datePart + '/gid_' + gid + '/';
        			
        			var boxscoreXML = y.rest( gameURL + 'boxscore.xml' ).get().response;
        			var gameXML = y.rest( gameURL + 'game.xml' ).get().response;
        			var playersXML = y.rest( gameURL + 'players.xml' ).get().response;
        			
        			var ar = boxscoreXML.game_info.toString().match(/<br\/><b>Weather<\/b>: (\d+) degrees,.*<br\/><b>Wind<\/b>: (\d+) mph, ([\w\s]+).<br\/>/);

        			var gameObject = {
        				'gid' 			: 'gid_' + gid,
        				'game_id'		: boxscoreXML.@game_id.toString(),
  						'date' 			: boxscoreXML.@date.toString(),
  						'teams'			: { 	'home' : { 	'code' 			: gameXML.team.(@type=='home').@code.toString(),
  															'name' 			: gameXML.team.(@type=='home').@name.toString(),
  															'name_full' 	: gameXML.team.(@type=='home').@name_full.toString(),
  															'name_brief' 	: gameXML.team.(@type=='home').@name_brief.toString() },
  												'away' : { 	'code' 			: gameXML.team.(@type=='away').@code.toString(),
  															'name'			: gameXML.team.(@type=='away').@name.toString(),
  															'name_full'		: gameXML.team.(@type=='away').@name_full.toString(),
  															'name_brief'	: gameXML.team.(@type=='away').@name_brief.toString() } 
  										  },
  						'game' 			: parseInt( boxscoreXML.@game_id.toString().substr( -1 ) ),
  						'umpire' 		: playersXML..umpire.( @position == 'home' ).@name.toString(),
  						'wind' 			: parseFloat( RegExp.$2 ),
  						'wind_dir' 		: RegExp.$3,
  						'temp' 			: parseFloat( RegExp.$1 ),
  						'type' 			: gameXML.@type.toString(),
  						'runs_home' 	: parseFloat( boxscoreXML.linescore.@home_team_runs.toString() ),
  						'runs_away' 	: parseFloat( boxscoreXML.linescore.@away_team_runs.toString() ),
  						'local_time' 	: gameXML.@local_game_time.toString(),
  						'stadium_id'	: gameXML.stadium.@id.toString()
        			};
        			gamesObject.game.push( gameObject );
        		}
        		
        		response.object = gamesObject;
        		
      			]]>
			</execute>
		</select>
	</bindings>
</table>