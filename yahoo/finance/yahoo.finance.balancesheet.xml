<?xml version="1.0" encoding="UTF-8"?>
<table xmlns="http://query.yahooapis.com/v1/schema/table.xsd">
    <meta>
        <author>
            Original: Ryan Hoium
            Updated by: James Dyer
        </author>
        <description>
            Yahoo Finance - Balance Sheet v1.0
        </description>
        <sampleQuery>
            SELECT * FROM {table} WHERE symbol='T'
        </sampleQuery>
    </meta>
    <bindings>
        <select itemPath="" produces="XML">
            <urls>
                <url>
                </url>
            </urls>
            <inputs>
            	<key id="symbol" type="xs:string" paramType="variable" required="true" />
            	<key id="reporttype" type="xs:string" paramType="variable" default="balancesheet" required="false" />
            	<key id="timeframe" type="xs:string" paramType="variable" default="quarterly" required="false" />
            </inputs>
            <execute>
            <![CDATA[
            // Setup Query from finance.yahoo.com
            var reporttype_code = "bs";
            reporttype = y.context.table;
            if( reporttype.match(/incomestatement/) ){reporttype_code = "is";}
            else if( reporttype.match(/balancesheet/) ){reporttype_code = "bs";}
            else if( reporttype.match(/cashflow/) ){reporttype_code = "cf";}
            var url="http://finance.yahoo.com/q/"+ reporttype_code + "?s=" + symbol + "&" + timeframe;
            var xpath = "//table[@class='yfnc_tabledata1']/tbody/tr/td/table/tbody/tr";
            var query = y.query("select * from html where url=@url and compat='html5' and xpath=@xpath", {url:url, xpath:xpath});
            var results = query.results;

            // Process Results
            var outputdata = <{reporttype} symbol={symbol} timeframe={timeframe}></{reporttype}>;
            if(results.tr.length() !== 0)
			{
                var y = 0; var x = 0;
                var numcolumns = 0;
                var data_array = new Array();
            
                // Read td column headings
                data_array[0] = new Array();
                data_array[0][0] = "Headings";
                for each(var head in results.tr[0].td)
                {
                    data_array[x] = new Array();
                    if (head.b) {
                    	data_array[x][y] = head.b.toString();
                    }
                    x++;
                }
                
                // Read th column headings
                for each(var head in results.tr[0].th)
                {
                    data_array[x] = new Array();
                    data_array[x][y] = head.toString();
                    x++;
                }
                
                numcolumns = x;

                // Read Rows
                y = 1;            
                for(var i = 1; i < results.tr.length(); i++) 
			    {
                    var row = results.tr[i];
                    if(row.td.length() >= numcolumns){
                        x = 0;
                        // read each column in row
                        for each (var column in row.td){
                            if("spacer" in column)
                            {}
                            else{
                                var dataitem;
                                if ("content" in column) {
				    dataitem = column.content.toString();
				} else if ("strong" in column) {
				    dataitem = column.strong.toString();
				} else {
				    dataitem = column.toString();
				}
                                dataitem = String(dataitem.replace(/\s+/g,""));
                                dataitem = String(dataitem.replace(/,/g,""));
                                dataitem = String(dataitem.replace(/\//g,"_"));
                                if(dataitem.match(/^[\(\)]/)){
                                    dataitem =  Number(dataitem.replace(/[\(\)]/g,"")) * -1000;
                                } else if(dataitem.match(/^[0-9]{1,}$/)){
                                    dataitem = Number(dataitem) * 1000;
                                }
                                data_array[x][y] = dataitem;
                                x++;
                            }
                        }
                        y++;
                    }
                }
                var numrows = y;
                x = 0; y = 0;
                for(x = 1; x < numcolumns; x++){
                    var period = data_array[x][0];
                    var financial_period = <statement context={reporttype} period={period}></statement>;
                    for(y = 1; y < numrows; y++){
                        row_name = data_array[0][y];
                        data = data_array[x][y];
                        financial_period.appendChild(<{row_name} report_row={y}>{data}</{row_name}>);
                    }
                    outputdata.appendChild(financial_period);
                }
            }
            // Return statsdata structure
            response.object = outputdata;
		]]>
            </execute>
        </select>
    </bindings>
</table>
